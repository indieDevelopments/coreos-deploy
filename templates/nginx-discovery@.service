[Unit]
Description=Announce Nginx@%i service on %i port (etcd registration)

# Requirements
Requires=nginx@%i.service

# Dependency ordering and binding
After=etcd.service
After=nginx@%i.service
BindsTo=nginx@%i.service

[Service]
# Get CoreOS environmental variables
EnvironmentFile=/etc/environment
EnvironmentFile=/etc/ssl-environment

# Start
## Test whether service is accessible and then register useful information
ExecStart=/bin/bash -c "\
        while true; do \
        curl -f ${COREOS_PUBLIC_IPV4}:%i; \
        if [ $? -eq 0 ]; then \
                etcdctl \
                 --endpoints=${ETCDCTL_ENDPOINTS} \
                 --ca-file=${ETCDCTL_CA_FILE} \
                 --cert-file=${ETCDCTL_CERT_FILE} \
                 --key-file=${ETCDCTL_KEY_FILE} \
                 set /services/nginx/${COREOS_PUBLIC_IPV4}:%i "${COREOS_PUBLIC_IPV4}:%i" --ttl 30; \
        else \
                etcdctl \
                 --endpoints=${ETCDCTL_ENDPOINTS} \
                 --ca-file=${ETCDCTL_CA_FILE} \
                 --cert-file=${ETCDCTL_CERT_FILE} \
                 --key-file=${ETCDCTL_KEY_FILE} \
                 rm /services/nginx/${COREOS_PUBLIC_IPV4}:%i; \
        fi; \
        sleep 20; \
        done"

# Stop
#ExecStop=/usr/bin/etcdctl --endpoints=${ETCDCTL_ENDPOINTS} --ca-file=${ETCDCTL_CA_FILE} --cert-file=${ETCDCTL_CERT_FILE} --key-file=${ETCDCTL_KEY_FILE} rm /services/nginx/${COREOS_PUBLIC_IPV4}:%i

[X-Fleet]
# Schedule on the same machine as the associated Nginx service
X-ConditionMachineOf=nginx@%i.service

